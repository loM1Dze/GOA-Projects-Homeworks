# 1) შექმენით 10 ელემენტიანი სია. სლაისინგის დახმარებით (დადებითი ინდექსებით):
# --> გამოიტანეთ პირველი 5 ელემენტი
# --> გამოიტანეთ ბოლო 3 ელემენტი
# --> გამოიტანეთ ელემენტები 3 ინდექსიდან 7 ინდექსის ჩათვლით

# 1) 10 ელემენტიანი სია
my_list = [10, 20, 30, 40, 50, 60, 70, 80, 90, 100]

# პირველი 5 ელემენტი
print(my_list[:5])

# ბოლო 3 ელემენტი
print(my_list[-3:])

# ელემენტები 3 ინდექსიდან 7 ინდექსის ჩათვლით
print(my_list[3:8])


# 2) შექმენით 15 ელემენტიანი სია. სლაისების დახმარებით (უარყოფითი ინდექსებით):
# --> გამოიტანეთ პირველი 6 ელემენტი
# --> გამოიტანეთ ბოლო 10 ელემენტი
# --> გამოიტანეთ ელემენტები 7 ინდექსიდან 14 ინდექსის ჩათვლით (გონებაში გადაიყვანეთ უარყოფით ინდექსებში)


# 2) 15 ელემენტიანი სია
my_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]

# პირველი 6 ელემენტი (უარყოფითი ინდექსებით)
print(my_list[:-9])   # იგივეა რაც my_list[:6]

# ბოლო 10 ელემენტი
print(my_list[-10:])

# ელემენტები 7 ინდექსიდან 14 ინდექსის ჩათვლით 
# ანუ 7 = -8 და 14 = -1
print(my_list[-8:])
  


# 3) მოცემულია სიტვა 'თვითმფრინავი' გამოიტანეთ 'ნავი'

word = "თვითმფრინავი"
print(word[-4:])   # ბოლო 4 ასო


# 4) მოცემულია სიტყვა 'Programmer'. სლაისინგის დახმარებით: --> გამოიტანეთ 'Pro' დადებითი და უარყოფითი ინდექსებით

word = "Programmer"

# 'Pro' დადებითი ინდექსებით
print(word[:3])

# 'Pro' უარყოფითი ინდექსებით
print(word[:-7])



# 5) შექმენით სია სადაც შეინახავთ კვირის დღეების სახელებს. სლაისინგის დახმარებით:
# --> გამოიტანეთ სამუშაო დღეები (დადებითი და უარყოფითი ინდექსებით)
# --> გამოიტანეთ დასვენების დღეები (დადებითი და უარყოფითი ინდექსებით)

# 5) კვირის დღეების სია
days = ["ორშაბათი", "სამშაბათი", "ოთხშაბათი", "ხუთშაბათი", "პარასკევი", "შაბათი", "კვირა"]

# სამუშაო დღეები (დადებითი ინდექსებით)
print(days[:5])

# სამუშაო დღეები (უარყოფითი ინდექსებით)
print(days[:-2])

# დასვენების დღეები (დადებითი ინდექსებით)
print(days[5:])

# დასვენების დღეები (უარყოფითი ინდექსებით)
print(days[-2:])



# 6) მოცემულია წინადადება: 'Python slicing is very powerful'. სლაისინგის გამოყენებით ->
# გამოიტანეთ: 
# 'Python'
# 'slicing'
# 'powerful'
# გამოიყენეთ როგორც დადებითი ასევე უარყოფითი ინდექსები

sentence = "Python slicing is very powerful"

# დადებითი ინდექსებით
print(sentence[:6])         # 'Python'
print(sentence[7:14])       # 'slicing'
print(sentence[23:])        # 'powerful'

# უარყოფითი ინდექსებით
print(sentence[:-25])       # 'Python'
print(sentence[-24:-16])    # 'slicing'
print(sentence[-8:])        # 'powerful'
